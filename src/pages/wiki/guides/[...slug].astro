---
import { getCollection } from "astro:content";
import Layout from "../../../layouts/Layout.astro";
import Sidebar from "../../../components/Wiki/Sidebar.astro";

export async function getStaticPaths() {
  const blogEntries = await getCollection("guides");
  return blogEntries.map((entry) => ({
    params: { slug: entry.slug },
    props: { entry },
  }));
}

const { entry } = Astro.props;

const { data } = entry;

const { Content } = await entry.render();
---

<Layout title={`Guide • ${data.title}`}>
  <div class="vw-section">
    <div class="vw-container">
      <div class="vw-grid-large" data-vw-grid>
        <Sidebar />
        <div class="vw-width-1-1 vw-width-expand@m">
          <article class="vw-article">
            <h1 class="vw-article-title">Guide • {data.title}</h1>
            <p class="vw-text-lead vw-text-muted">{data.description}</p>
           
            <div class="article-content link-primary">
                <Content />
            </div>
            <hr class="vw-margin-medium" />
          </article>
        </div>
      </div>
    </div>
  </div>
  <script src="/js/docs.js" is:inline></script>
  <script>
    function replaceCheckboxesWithImages() {
        const checkboxes = document.querySelectorAll('input[type="checkbox"]');

        checkboxes.forEach(checkbox => {
            if (checkbox.hasAttribute('checked') && checkbox.hasAttribute('disabled')) {
              checkbox.outerHTML = '<img src="/design/yes.jpg" width="25" height="25">';
            } else if (checkbox.hasAttribute('disabled')) {
                checkbox.outerHTML = '<img src="/design/no.jpg" width="25" height="25">';
            }
        });

        // Remove the script element
        const scriptElement = document.currentScript;
        if (scriptElement) {
            scriptElement.parentElement.removeChild(scriptElement);
        }
    }
    replaceCheckboxesWithImages();
</script>

</Layout>
